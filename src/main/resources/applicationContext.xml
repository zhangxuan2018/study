<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-3.0.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">

    <!-- Controller的默认处理字符串编码方式ISO_8859_1-->
   <!-- <bean id="stringHttpMessageConverter" class="org.springframework.http.converter.StringHttpMessageConverter">
        <constructor-arg value="UTF-8" />
    </bean>-->

    <context:component-scan base-package="com.zoie.example" />

    <!--*************** 强制使用CGLIB方式进行代理**************** -->
   <!-- <aop:aspectj-autoproxy proxy-target-class="true" />-->



    <!-- 自动读取配置文件 -->
    <context:property-placeholder location="classpath:hibernate.properties" />

    <!--配置c3p0连接池-->
    <bean id="myDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
    <!--注入属性-->
    <property name="driverClass" value="${jdbc.driverClassName}" />
        <property name="jdbcUrl" value="${jdbc.url}" />
        <property name="user" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />
    </bean>

    <bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <property name="dataSource" ref="myDataSource"/>
        <property name="packagesToScan"  value="com.zoie.example.entity"/>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.format_sql">true</prop>
            </props>
        </property>

    </bean>

    <bean id="transactionManager"
          class="org.springframework.orm.hibernate5.HibernateTransactionManager">
        <property name="sessionFactory"> <ref bean="sessionFactory" />
        </property>
    </bean>

    <tx:annotation-driven transaction-manager="transactionManager"/>

    <!-- 配置事务规则 -->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="save*" propagation="REQUIRED" />
            <tx:method name="add*" propagation="REQUIRED" />
            <tx:method name="update*" propagation="REQUIRED" />
            <tx:method name="del*" propagation="REQUIRED" />
            <tx:method name="find*" propagation="REQUIRED" read-only="true" />
            <tx:method name="get*" propagation="REQUIRED" read-only="true" />
            <tx:method name="*" propagation="SUPPORTS"/>
        </tx:attributes>
    </tx:advice>

    <!--<bean id="loggerAspect" class="com.zoie.example.Logger.LoggerAspect"></bean>

    <aop:config>
        <aop:aspect id="loggerAspectAop" ref="loggerAspect">
            <aop:pointcut expression="execution(* com.zoie.example.controller.*.*(..))" id="loggerPointcut"/>
            <aop:before method="before" pointcut-ref="loggerPointcut"/>
        </aop:aspect>
    </aop:config>-->


    <!-- 3. 配置事务切入点, 以及把事务切入点和事务属性关联起来 -->

    <!--<aop:config>
        <aop:pointcut id="productServiceMethods" expression="execution(* com.zoie.example.service..*.*(..))"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="productServiceMethods" />
    </aop:config>-->

   <!-- &lt;!&ndash; 加入spring注解 &ndash;&gt;
    <context:annotation-config />-->

</beans>
